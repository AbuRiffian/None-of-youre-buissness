local function A(B) return (B:gsub(".", function(C) return string.format("%02X", string.byte(C)) end)) end
local D, E, F = A("This file is licensed with Luarmor. You must use the actual loadstring to execute this script. Do not run this file directly. Always use the loadstring."), A("ef509271d99bdcabb9ce8be11210e82f"), A("https://raw.githubusercontent.com/AbuRiffian/None-of-youre-buissness/refs/heads/main/Secret%20Service%20Panel%20(Luarmor%20is%20ASS%20at%20protecting%20scripts%20XD)")
if _G["\x6C\x72\x6D\x5F\x6C\x6F\x61\x64\x5F\x73\x63\x72\x69\x70\x74"] then _G["\x6C\x72\x6D\x5F\x6C\x6F\x61\x64\x5F\x73\x63\x72\x69\x70\x74"](E) while task.wait(1) do end end
local G, H = { ["\x4D\x6F\x64\x65"] = "\x66\x61\x73\x74\x6C\x6F\x61\x64" }, 0.03
_G["\x6C\x5F\x66\x61\x73\x74\x6C\x6F\x61\x64\x5F\x65\x6E\x61\x62\x6C\x65\x64"] = function(I)
    if I == "\x66\x6C\x75\x73\x68" then
        task.wait(H)
        H = H + 2
        local J, K
        local L, M = pcall(function()
            K = game["\x48\x74\x74\x70\x47\x65\x74"](game, F)
            pcall(writefile, E .. "-cache.lua", "-- " .. D .. "\n\n if not _G[\"is_from_loader\"] then warn('Use the loadstring, do not run this directly') return end;\n " .. K)
            task.wait(0.1)
            J = loadstring(K)
        end)
        if not L or not J then
            pcall(writefile, "lrm-err-loader-log-httpresp.txt", tostring(K))
            warn("Error while executing loader. Err:" .. tostring(M) .. " See lrm-err-loader-log-httpresp.txt in your workspace.")
            return
        end
        J(G)
    end
    if I == "\x72\x6C" then
        pcall(writefile, E .. "-cache.lua", "recache required")
        task.wait(0.2)
        pcall(delfile, E .. "-cache.lua")
    end
end
local N, O, P = nil, pcall(function()
    N = readfile(E .. "-cache.lua")
    if not N or #N < 5 then N = nil return end
    N = loadstring(N)
end)
if not O or not N then _G["\x6C\x5F\x66\x61\x73\x74\x6C\x6F\x61\x64\x5F\x65\x6E\x61\x62\x6C\x65\x64"]("\x66\x6C\x75\x73\x68") return end
N(G)
